<!DOCTYPE html>
<html lang="ar">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>إضافة وظيفة</title>
  <link href="https://fonts.googleapis.com/css2?family=Cairo:wght@400;700&display=swap" rel="stylesheet" />
  <!-- إضافة SweetAlert2 -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <style>
    :root {
      --primary-color: #6c5ce7;
      --secondary-color: #8e7bff;
      --background-color: #f7f9fc;
      --form-bg: #ffffff;
      --border-color: #d1c4e9;
      --shadow-color: rgba(106, 27, 154, 0.2);
      --text-color: #2d3748;
      --muted-text: #718096;
      --border-radius: 14px;
      --transition: 0.3s ease;
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: "Cairo", sans-serif;
    }

   
    body {
      background-color: var(--background-color);
      color: var(--text-color);
      line-height: 1.6;
   
    }

    h2 {
      text-align: center;
      font-size: 28px;
      margin-bottom: 20px;
      color: var(--primary-color);
      font-weight: 700;
    }

    form {
      max-width: 600px;
      margin: 0 auto;
      background-color: var(--form-bg);
      padding: 30px;
      border-radius: var(--border-radius);
      box-shadow: 0 8px 16px var(--shadow-color);
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      border: 1px solid var(--border-color);
    }

    label {
      display: block;
      font-size: 16px;
      margin: 15px 0 5px;
      color: var(--primary-color);
      font-weight: 600;
    }

    input,
    textarea,
    select {
      width: 100%;
      padding: 12px;
      font-size: 14px;
      border: 1px solid var(--border-color);
      border-radius: var(--border-radius);
      margin-bottom: 10px;
      transition: border-color var(--transition), box-shadow var(--transition);
    }

    input:focus,
    textarea:focus,
    select:focus {
      border-color: var(--primary-color);
      box-shadow: 0 0 8px var(--shadow-color);
      outline: none;
    }

    textarea {
      resize: vertical;
      min-height: 100px;
    }

    .select-group {
      display: flex;
      flex-wrap: wrap;
      gap: 20px;
      margin-bottom: 15px;
    }

    .select-group > div {
      flex: 1;
      min-width: 150px;
    }

    .checkbox-group {
      display: flex;
      align-items: center;
      margin-bottom: 20px;
    }

    .checkbox-group input {
      margin-left: 10px;
      width: auto;
    }

    .file-upload {
      display: flex;
      align-items: center;
      margin-bottom: 15px;
    }

    .file-upload input[type="file"] {
      flex: 1;
      padding: 10px;
    }

    .file-upload label {
      margin-right: 10px;
      font-size: 14px;
      color: var(--primary-color);
      cursor: pointer;
    }

    button {
      width: 180px;
      padding: 12px;
      background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
      color: #fff;
      border: none;
      font-size: 16px;
      border-radius: var(--border-radius);
      cursor: pointer;
      margin-top: 20px;
      transition: transform var(--transition), box-shadow var(--transition);
    }

    button:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 15px var(--shadow-color);
    }

    .disabled {
      background-color: #e9ecef;
      border-color: #ced4da;
      pointer-events: none;
      opacity: 0.6;
    }
  </style>
</head>
<%- include('partials/headerhome') %>
<%- include('partials/headeraction') %>
<body>

  <h2>إضافة وظيفة</h2>
  <form id="jobForm">
    <label for="title">المسمى الوظيفي:</label>
    <input type="text" id="title" name="title" required />

    <label for="description">الوصف الوظيفي:</label>
    <textarea id="description" name="description" required></textarea>

    <div class="select-group">
      <div>
        <label for="jobType">نوع العمل</label>
        <select id="jobType" name="jobType" required>
          <option value="full-time">دوام كامل</option>
          <option value="part-time">دوام جزئي</option>
        </select>
      </div>
    </div>

    <div class="select-group">
      <div>
        <label for="education">المؤهل العلمي</label>
        <select id="education" name="education" required>
          <option value="إعدادي">إعدادي</option>
          <option value="ثانوي">ثانوي</option>
          <option value="جامعة">جامعة</option>
        </select>
      </div>
    </div>

    <label for="currency">نوع العملة:</label>
    <input type="text" id="currency" name="currency" placeholder="نوع العملة" />

    <div class="select-group">
      <div>
        <label for="salaryMin">أقل راتب:</label>
        <input type="number" id="salaryMin" name="salaryMin" required />
      </div>
      <div>
        <label for="salaryMax">أعلى راتب:</label>
        <input type="number" id="salaryMax" name="salaryMax" required />
      </div>
    </div>

    <div class="checkbox-group">
      <input type="checkbox" id="salaryAfterInterview" name="salaryAfterInterview" value="1" />
      <label for="salaryAfterInterview">تحديد الراتب بعد المقابلة</label>
    </div>

    <label for="location">الموقع:</label>
    <input type="text" id="location" name="location" required />

    <div class="file-upload">
      <label for="logo">الشعار (اختياري):</label>
      <input type="file" id="logo" name="logo" />
    </div>

    <label for="experience">الخبرة:</label>
    <input type="text" id="experience" name="experience" required />

    <label for="duration">مدة الإعلان (بالأيام):</label>
    <input type="number" id="duration" name="duration" required />

    <button type="submit">إضافة الوظيفة</button>
  </form>

  <script>
    const salaryAfterInterviewCheckbox = document.getElementById("salaryAfterInterview");
    const salaryMinInput = document.getElementById("salaryMin");
    const salaryMaxInput = document.getElementById("salaryMax");

    // تعطيل/تفعيل الحقول بناءً على حالة الخيار
    salaryAfterInterviewCheckbox.addEventListener("change", function () {
      if (this.checked) {
        salaryMinInput.disabled = true;
        salaryMaxInput.disabled = true;
        salaryMinInput.classList.add("disabled");
        salaryMaxInput.classList.add("disabled");
        salaryMinInput.removeAttribute("required");
        salaryMaxInput.removeAttribute("required");
        salaryMinInput.value = "";
        salaryMaxInput.value = "";
      } else {
        salaryMinInput.disabled = false;
        salaryMaxInput.disabled = false;
        salaryMinInput.classList.remove("disabled");
        salaryMaxInput.classList.remove("disabled");
        salaryMinInput.setAttribute("required", "true");
        salaryMaxInput.setAttribute("required", "true");
      }
    });

    document.getElementById("jobForm").addEventListener("submit", async function (event) {
      event.preventDefault();
      const formData = new FormData(this);

      // إذا كان خيار "تحديد الراتب بعد المقابلة" مفعلاً، تأكد من إرسال قيمة فارغة للحقول
      if (salaryAfterInterviewCheckbox.checked) {
        formData.set("salaryMin", "");
        formData.set("salaryMax", "");
      }

      try {
        console.log("📤 إرسال البيانات:", Object.fromEntries(formData));
        const response = await fetch("/jobs/add", {
          method: "POST",
          body: formData,
        });
        const result = await response.json();
        console.log("✅ استجابة السيرفر:", result);

        if (response.ok) {
          Swal.fire({
            icon: "success",
            title: "تم الإضافة!",
            text: result.message || "تمت إضافة الوظيفة بنجاح",
            confirmButtonText: "موافق",
            confirmButtonColor: "#6c5ce7",
          }).then(() => {
            window.location.href = "/listing-job";
          });
        } else {
          Swal.fire({
            icon: "error",
            title: "فشل الإضافة",
            text: result.message || "فشل في إضافة الوظيفة، حاول مرة أخرى.",
            confirmButtonText: "موافق",
            confirmButtonColor: "#e74c3c",
          });
        }
      } catch (error) {
        console.error("❌ خطأ:", error);
        Swal.fire({
          icon: "error",
          title: "خطأ!",
          text: error.message || "حدث خطأ أثناء إرسال البيانات إلى السيرفر.",
          confirmButtonText: "موافق",
          confirmButtonColor: "#e74c3c",
        });
      }
    });
  </script>
</body>
<footer style="margin-top: 14vh"><%- include('partials/footer') %></footer>
</html>