<!DOCTYPE html>
<html lang="ar">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>صفحة الأصدقاء</title>
  <link rel="stylesheet" href="/css/friends.css" />
  <script src="https://kit.fontawesome.com/your-font-awesome-kit.js" crossorigin="anonymous"></script> <!-- استبدل بمفتاح Font Awesome الخاص بك -->
</head>
<body>
  <%- include('partials/headerhome') %>
  <%- include('partials/headeraction') %>

  <!-- عرض رسائل النجاح أو الخطأ -->
  <% if (successMessage) { %>
    <p class="message-success"><%= successMessage %></p>
  <% } %>
  <% if (errorMessage) { %>
    <p class="message-error"><%= errorMessage %></p>
  <% } %>

  <div class="all">
    <!-- الجانب الأيمن: البحث عن صديق والمحظورين -->
    <div class="right">
      <text class="text">البحث عن صديق</text>
      <section>
        <div class="search">
          <form action="/friends/search" method="get">
            <input type="text" name="q" placeholder="ابحث عن صديق..." required />
            <button type="submit"><i class="fas fa-search"></i></button>
          </form>
        </div>
        <% if (searchResults && searchResults.length > 0) { %>
          <h2>نتائج البحث</h2>
          <ul class="ul">
            <% searchResults.forEach(result => { %>
              <li class="li" data-id="<%= result.id %>">
                <div class="friend-info">
                  <img src="<%= result.avatar %>" 
                       alt="صورة المستخدم" 
                       onerror="this.src='/uploads/images/pngwing.com.png'" />
                  <span><%= result.name %></span>
                </div>
                <% if (result.friendship_status === 'not_friend') { %>
                  <form action="/friends/send-request" method="post">
                    <input type="hidden" name="friendId" value="<%= result.id %>" />
                    <button type="submit">إضافة</button>
                  </form>
                <% } else if (result.friendship_status === 'request_sent') { %>
                  <span class="status pending">طلب مرسل</span>
                <% } else if (result.friendship_status === 'friend') { %>
                  <span class="status friend">صديق</span>
                <% } else if (result.friendship_status === 'blocked') { %>
                  <span class="status blocked">محظور</span>
                <% } %>
              </li>
            <% }); %>
          </ul>
        <% } else if (searchResults && searchResults.length === 0) { %>
          <p class="no-results">لا توجد نتائج مطابقة</p>
        <% } %>
      </section>

      <!-- الأصدقاء المحظورين -->
      <text class="text">الأصدقاء المحظورين</text>
      <section>
        <% if (!blockedFriends || blockedFriends.length === 0) { %>
          <p class="no-results">لا يوجد أصدقاء محظورين</p>
        <% } else { %>
          <ul class="ul" id="blocked-friends-list">
            <% blockedFriends.forEach(blocked => { %>
              <li class="li" data-id="<%= blocked.id %>">
                <div class="friend-info">
                  <img src="<%= blocked.avatar %>" 
                       alt="صورة المحظور" 
                       onerror="this.src='/uploads/images/pngwing.com.png'" />
                  <span><%= blocked.name %></span>
                </div>
                <form action="/friends/unblock/<%= blocked.id %>" method="post">
                  <button type="submit">إلغاء الحظر</button>
                </form>
              </li>
            <% }); %>
          </ul>
        <% } %>
      </section>
    </div>

    <!-- الوسط: قائمة الأصدقاء -->
    <div class="center">
      <section>
        <text class="text">أصدقاؤك <span id="friends-count">(<%= friends ? friends.length : 0 %>)</span></text>
        <% if (!friends || friends.length === 0) { %>
          <p class="no-results">لا يوجد أصدقاء حاليًا</p>
        <% } else { %>
          <ul class="ul" id="friends-list">
            <% friends.forEach(friend => { %>
              <li class="li" data-id="<%= friend.id %>">
                <div class="friend-info">
                  <img src="<%= friend.avatar %>" 
                       alt="صورة الصديق" 
                       onerror="this.src='/uploads/images/pngwing.com.png'" />
                  <span><%= friend.name %></span>
                  <span class="status <%= friend.online ? 'online' : 'offline' %>">
                    <%= friend.online ? 'متصل' : 'غير متصل' %>
                  </span>
                </div>
                <div class="friend-actions">
                  <a href="/friends/profile/<%= friend.id %>" class="action-icon" title="عرض الملف الشخصي"><i class="fas fa-user"></i></a>
                  <a href="/chat/<%= friend.id %>" class="action-icon" title="الدردشة"><i class="fas fa-comment"></i></a>
                  <form action="/friends/block/<%= friend.id %>" method="post" style="display: inline;">
                    <button type="submit" class="action-icon" title="حظر"><i class="fas fa-ban"></i></button>
                  </form>
                  <form action="/friends/remove/<%= friend.id %>" method="post" style="display: inline;">
                    <button type="submit" class="action-icon" title="إزالة"><i class="fas fa-user-slash"></i></button>
                  </form>
                </div>
              </li>
            <% }); %>
          </ul>
        <% } %>
      </section>
    </div>

    <!-- الجانب الأيسر: طلبات الصداقة واقتراحات الأصدقاء -->
    <div class="left">
      <text class="text">طلبات الصداقة <% if (unreadCount > 0) { %><span class="unread-count"><%= unreadCount %></span><% } %></text>
      <section>
        <% if (!friendRequests || friendRequests.length === 0) { %>
          <p class="no-results">لا توجد طلبات صداقة جديدة</p>
        <% } else { %>
          <ul class="ul" id="friend-requests-list">
            <% friendRequests.forEach(request => { %>
              <li class="li" data-id="<%= request.id %>">
                <div class="friend-info">
                  <img src="<%= request.sender_avatar %>" 
                       alt="صورة مرسل الطلب" 
                       onerror="this.src='/uploads/images/pngwing.com.png'" />
                  <span><%= request.sender_name %></span>
                </div>
                <div class="friend-actions">
                  <form action="/friends/accept-request/<%= request.id %>" method="post">
                    <button type="submit" class="action-button accept">قبول</button>
                  </form>
                  <form action="/friends/reject-request/<%= request.id %>" method="post">
                    <button type="submit" class="action-button reject">رفض</button>
                  </form>
                </div>
              </li>
            <% }); %>
          </ul>
        <% } %>
      </section>

      <text class="text">اقتراحات الأصدقاء</text>
      <section>
        <% if (!users || users.length === 0) { %>
          <p class="no-results">لا توجد اقتراحات حاليًا</p>
        <% } else { %>
          <ul class="ul" id="suggested-friends-list">
            <% users.forEach(user => { %>
              <li class="li" data-id="<%= user.id %>">
                <div class="friend-info">
                  <img src="<%= user.avatar %>" 
                       alt="صورة المستخدم" 
                       onerror="this.src='/uploads/images/pngwing.com.png'" />
                  <span><%= user.name %></span>
                </div>
                <div class="suggestion-details">
                  <span><%= user.country %></span>
                  <span>العمر: <%= user.age %></span>
                  <span><%= user.language %></span>
                </div>
                <form action="/friends/send-request" method="post">
                  <input type="hidden" name="friendId" value="<%= user.id %>" />
                  <button type="submit">إضافة</button>
                </form>
              </li>
            <% }); %>
          </ul>
        <% } %>
      </section>
    </div>
  </div>

  <footer><%- include('partials/footer') %></footer>

  <!-- السكربت للتفاعل في الوقت الفعلي عبر WebSocket -->
  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();
    const userId = "<%= userId || '' %>";

    if (userId) {
      socket.emit("join", userId); // الانضمام إلى غرفة المستخدم
    }

    // استقبال طلب صداقة جديد
    socket.on("friendRequestReceived", ({ senderId, senderName }) => {
      fetch(`/friends/friend-request/${senderId}`)
        .then(response => response.json())
        .then(request => {
          const requestList = document.getElementById("friend-requests-list");
          if (!requestList.querySelector(`li[data-id="${request.id}"]`)) {
            const li = document.createElement("li");
            li.className = "li";
            li.dataset.id = request.id;
            li.innerHTML = `
              <div class="friend-info">
                <img src="${request.sender_avatar}" 
                     alt="صورة مرسل الطلب" 
                     onerror="this.src='/uploads/images/pngwing.com.png'" />
                <span>${request.sender_name}</span>
              </div>
              <div class="friend-actions">
                <form action="/friends/accept-request/${request.id}" method="post">
                  <button type="submit" class="action-button accept">قبول</button>
                </form>
                <form action="/friends/reject-request/${request.id}" method="post">
                  <button type="submit" class="action-button reject">رفض</button>
                </form>
              </div>
            `;
            requestList.prepend(li);
            updateUnreadCount(1);
          }
        })
        .catch(error => console.error("Error fetching friend request:", error));
    });

    // قبول طلب صداقة
    socket.on("friendRequestAccepted", ({ receiverId }) => {
      fetch(`/friends/friend/${receiverId}`)
        .then(response => response.json())
        .then(friend => {
          const friendsList = document.getElementById("friends-list");
          if (!friendsList.querySelector(`li[data-id="${friend.id}"]`)) {
            const li = document.createElement("li");
            li.className = "li";
            li.dataset.id = friend.id;
            li.innerHTML = `
              <div class="friend-info">
                <img src="${friend.avatar}" 
                     alt="صورة الصديق" 
                     onerror="this.src='/uploads/images/pngwing.com.png'" />
                <span>${friend.name}</span>
                <span class="${friend.online ? 'online' : 'offline'}">${friend.online ? 'متصل' : 'غير متصل'}</span>
              </div>
              <div class="friend-actions">
                <a href="/friends/profile/${friend.id}" class="action-icon" title="عرض الملف الشخصي"><i class="fas fa-user"></i></a>
                <a href="/chat/${friend.id}" class="action-icon" title="الدردشة"><i class="fas fa-comment"></i></a>
                <form action="/friends/block/${friend.id}" method="post" style="display: inline;">
                  <button type="submit" class="action-icon" title="حظر"><i class="fas fa-ban"></i></button>
                </form>
                <form action="/friends/remove/${friend.id}" method="post" style="display: inline;">
                  <button type="submit" class="action-icon" title="إزالة"><i class="fas fa-user-slash"></i></button>
                </form>
              </div>
            `;
            friendsList.prepend(li);
            updateFriendsCount(1);
          }

          const requestElement = document.querySelector(`#friend-requests-list li[data-id="${friend.id}"]`);
          if (requestElement) requestElement.remove();
          updateUnreadCount(-1);
        })
        .catch(error => console.error("Error fetching friend:", error));
    });

    // إلغاء طلب صداقة
    socket.on("friendRequestCanceled", ({ senderId }) => {
      const requestElement = document.querySelector(`#friend-requests-list li[data-id="${senderId}"]`);
      if (requestElement) {
        requestElement.remove();
        updateUnreadCount(-1);
      }
    });

    // رفض طلب صداقة
    socket.on("friendRequestRejected", ({ receiverId }) => {
      const requestElement = document.querySelector(`#friend-requests-list li[data-id="${receiverId}"]`);
      if (requestElement) {
        requestElement.remove();
        updateUnreadCount(-1);
      }
    });

    // حظر صديق
    socket.on("friendBlocked", ({ friendId }) => {
      const friendElement = document.querySelector(`#friends-list li[data-id="${friendId}"]`);
      if (friendElement) {
        friendElement.remove();
        updateFriendsCount(-1);
      }

      fetch(`/friends/blocked/${friendId}`)
        .then(response => response.json())
        .then(blocked => {
          const blockedList = document.getElementById("blocked-friends-list");
          if (!blockedList.querySelector(`li[data-id="${blocked.id}"]`)) {
            const li = document.createElement("li");
            li.className = "li";
            li.dataset.id = blocked.id;
            li.innerHTML = `
              <div class="friend-info">
                <img src="${blocked.avatar}" 
                     alt="صورة المحظور" 
                     onerror="this.src='/uploads/images/pngwing.com.png'" />
                <span>${blocked.name}</span>
              </div>
              <form action="/friends/unblock/${blocked.id}" method="post">
                <button type="submit">إلغاء الحظر</button>
              </form>
            `;
            blockedList.prepend(li);
          }
        })
        .catch(error => console.error("Error fetching blocked friend:", error));
    });

    // إلغاء حظر صديق
    socket.on("friendUnblocked", ({ friendId }) => {
      const blockedElement = document.querySelector(`#blocked-friends-list li[data-id="${friendId}"]`);
      if (blockedElement) blockedElement.remove();
    });

    // إزالة صديق
    socket.on("friendRemoved", ({ removerId }) => {
      const friendElement = document.querySelector(`#friends-list li[data-id="${removerId}"]`);
      if (friendElement) {
        friendElement.remove();
        updateFriendsCount(-1);
      }
    });

    // تحديث حالة الاتصال في الوقت الفعلي
    socket.on("userStatus", ({ userId, online }) => {
      const friendElement = document.querySelector(`#friends-list li[data-id="${userId}"]`);
      if (friendElement) {
        const statusElement = friendElement.querySelector(".status");
        if (statusElement) {
          statusElement.textContent = online ? "متصل" : "غير متصل";
          statusElement.className = "status " + (online ? "online" : "offline");
        }
      }
    });

    // دالة لتحديث عدد الأصدقاء
    function updateFriendsCount(delta) {
      const friendsCountElement = document.getElementById("friends-count");
      const currentCount = parseInt(friendsCountElement.textContent.match(/\d+/)[0]) || 0;
      friendsCountElement.textContent = `(${currentCount + delta})`;
    }

    // دالة لتحديث عدد الإشعارات غير المقروءة
    function updateUnreadCount(delta) {
      const unreadCountElement = document.querySelector(".unread-count");
      let unreadCount = parseInt(unreadCountElement?.textContent) || 0;
      unreadCount += delta;

      if (unreadCount > 0) {
        if (unreadCountElement) {
          unreadCountElement.textContent = unreadCount;
        } else {
          const textElement = document.querySelector(".left .text");
          textElement.innerHTML += ` <span class="unread-count">${unreadCount}</span>`;
        }
      } else if (unreadCountElement) {
        unreadCountElement.remove();
      }
    }
  </script>
</body>
</html>