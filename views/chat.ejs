<!DOCTYPE html>
<html lang="ar">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>دردشة Colorizer</title>
    <link href="https://fonts.googleapis.com/css2?family=Cairo:wght@400;700&family=Tajawal:wght@700&display=swap" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: "Cairo", sans-serif;
        }

        body {
            background-color: #f9fbfc;
            color: #333;
            font-size: 0.875rem;
        }

        #chat-container {
            direction: rtl;
            display: flex;
            justify-content: center;
            flex-direction: column;
            align-items: center;
            width: 100%;
            max-width: 700px;
            height: 90vh;
            background: #FFFFFF;
            border-radius: 20px;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            margin: 20px auto;
        }

        .chat-header {
            background: linear-gradient(135deg, #6B48FF, #A78BFA);
            color: #FFFFFF;
            padding: 15px 20px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
            width: 100%;
        }

        .chat-header .user-info {
            display: flex;
            align-items: center;
        }

        .chat-header img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-left: 10px;
            border: 2px solid #FFFFFF;
        }

        .chat-header h3 {
            font-family: 'Tajawal', sans-serif;
            font-size: 1.2rem;
            margin-left: 10px;
        }

        .chat-header .status {
            font-size: 0.9rem;
            opacity: 0.8;
        }

        #messages {
            flex: 1;
            padding: 20px;
            overflow-y: auto;
            scrollbar-width: thin;
            scrollbar-color: #A78BFA #F5F5F5;
            background: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" width="100" height="100" fill="none"%3E%3Ccircle cx="50" cy="50" r="20" fill="%23A78BFA" opacity="0.05"/%3E%3C/svg%3E');
            background-repeat: repeat;
            width: 100%;
        }

        #messages::-webkit-scrollbar {
            width: 6px;
        }

        #messages::-webkit-scrollbar-thumb {
            background: #A78BFA;
            border-radius: 10px;
        }

        .message {
            margin-bottom: 15px;
            display: flex;
            align-items: flex-end;
            animation: fadeIn 0.3s ease;
        }

        .message.sent {
            flex-direction: row-reverse;
        }

        .message img.avatar {
            width: 35px;
            height: 35px;
            border-radius: 50%;
            margin: 0 10px;
        }

        .message .content {
            position: relative;
            max-width: 65%;
        }

        .message strong {
            font-family: 'Tajawal', sans-serif;
            color: #6B48FF;
            font-size: 0.9rem;
            margin-bottom: 5px;
            display: block;
        }

        .message p {
            padding: 12px 18px;
            border-radius: 18px;
            margin: 0;
            font-size: 1rem;
            line-height: 1.4;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        }

        .message.received p {
            background: #FFFFFF;
            color: #333;
            border: 1px solid #EDE9FE;
        }

        .message.sent p {
            background: linear-gradient(135deg, #6B48FF, #A78BFA);
            color: #FFFFFF;
        }

        .message img.message-image {
            width: 200px;
            height: auto;
            border-radius: 10px;
            margin-top: 10px;
            transition: transform 0.3s;
        }

        .message img.message-image:hover {
            transform: scale(1.05);
        }

        .delete-message-btn {
            background: transparent;
            color: #FF5C5C;
            border: none;
            cursor: pointer;
            font-size: 14px;
            opacity: 0.7;
            transition: opacity 0.2s;
            margin: 0 5px;
        }

        .delete-message-btn:hover {
            opacity: 1;
        }

        #message-form {
            padding: 15px;
            background: #FFFFFF;
            border-top: 1px solid #E5E7EB;
            display: flex;
            align-items: center;
            gap: 10px;
            width: 100%;
        }

        #message-form textarea {
            flex: 1;
            padding: 12px;
            border-radius: 25px;
            border: 1px solid #DDD6FE;
            resize: none;
            outline: none;
            font-family: 'Cairo', sans-serif;
            background: #F9F9F9;
            transition: border 0.3s;
        }

        #message-form textarea:focus {
            border-color: #6B48FF;
        }

        #message-form button {
            padding: 12px 20px;
            border: none;
            border-radius: 25px;
            background: #6B48FF;
            color: #FFFFFF;
            cursor: pointer;
            transition: background 0.3s;
        }

        #message-form button:hover {
            background: #A78BFA;
        }

        .upload-button {
            padding: 12px;
            border-radius: 25px;
            background: #A78BFA;
            color: #FFFFFF;
            cursor: pointer;
            transition: background 0.3s;
        }

        .upload-button:hover {
            background: #6B48FF;
        }

        .upload-button i {
            font-size: 18px;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        @media (max-width: 600px) {
            #chat-container {
                width: 100%;
                height: 100vh;
                border-radius: 0;
            }

            .chat-header h3 {
                font-size: 1rem;
            }

            .message p {
                font-size: 0.9rem;
            }
        }
    </style>
</head>
<%- include('partials/headerhome') %>
<%- include('partials/headeraction') %>
<body>
    <div id="chat-container">
        <div class="chat-header">
            <div class="user-info">
                <% if (friendAvatar) { %>
                    <img 
                        src="<%= friendAvatar %>" 
                        alt="<%= friendName || 'صديق' %>"
                        onerror="this.src='/uploads/images/pngwing.com.png'" 
                    />
                    <div>
                        <h3><%= friendName || 'صديق' %></h3>
                        <span class="status">
                            <%= friendLastActive && (Date.now() - new Date(friendLastActive).getTime() < 5 * 60 * 1000) ? 'متصل الآن' : 'غير متصل' %>
                        </span>
                    </div>
                <% } else { %>
                    <img src="/uploads/images/pngwing.com.png" alt="صديق" />
                    <div>
                        <h3>صديق</h3>
                        <span class="status">غير متصل</span>
                    </div>
                <% } %>
            </div>
            <i class="fas fa-ellipsis-h" style="font-size: 18px; cursor: pointer;"></i>
        </div>

        <div id="messages">
            <% messages.forEach((message) => { %>
                <div class="message <%= message.sender_id === userId ? 'sent' : 'received' %>" data-sender-id="<%= message.sender_id %>">
                    <img 
                        src="<%= message.sender_avatar %>" 
                        class="avatar" 
                        data-user-id="<%= message.sender_id %>"
                        alt="<%= message.sender_name || 'User' %>"
                        onerror="this.src='/uploads/images/pngwing.com.png'" 
                    />
                    <div class="content">
                        <strong><%= message.sender_name || 'غير معروف' %></strong>
                        <p><%= message.content %></p>
                        <% if (message.image_path) { %>
                            <img 
                                class="message-image" 
                                src="<%= message.image_path %>" 
                                alt="Message Image" 
                                onerror="this.style.display='none'" 
                            />
                        <% } %>
                    </div>
                    <button class="delete-message-btn" data-message-id="<%= message.id %>">
                        <i class="fas fa-trash"></i>
                    </button>
                </div>
            <% }) %>
        </div>

        <form id="message-form" enctype="multipart/form-data" style="display: flex; flex-direction: row-reverse;">
            <textarea name="messageContent" placeholder="اكتب رسالتك..." rows="1" required></textarea>
            <input type="hidden" name="receiverId" value="<%= friendId %>" />
            <label class="upload-button">
                <i class="fas fa-image"></i>
                <input type="file" name="imagePath" style="display: none" />
            </label>
            <button type="submit"><i class="fas fa-paper-plane"></i></button>
        </form>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();
        const form = document.getElementById("message-form");
        const messagesContainer = document.getElementById("messages");
        const userId = "<%= userId %>";
        const friendId = "<%= friendId %>";

        form.addEventListener("submit", async (e) => {
            e.preventDefault();
            const messageContent = form.messageContent.value;
            const receiverId = form.receiverId.value;
            const imagePath = form.querySelector("input[type='file']").files[0];

            if (!messageContent.trim() && !imagePath) return;

            const formData = new FormData();
            formData.append("messageContent", messageContent);
            formData.append("receiverId", receiverId);
            if (imagePath) formData.append("imagePath", imagePath);

            try {
                const response = await fetch("/chat/sendMessage", {
                    method: "POST",
                    body: formData,
                });
                const data = await response.json();
                if (data.message) {
                    form.messageContent.value = "";
                    form.querySelector("input[type='file']").value = "";
                }
            } catch (error) {
                alert("خطأ في إرسال الرسالة: " + error.message);
            }
        });

        socket.on("newMessage", (message) => {
            const isSent = message.sender_id === userId;
            const messageElement = document.createElement("div");
            messageElement.className = `message ${isSent ? 'sent' : 'received'}`;
            messageElement.dataset.senderId = message.sender_id;
            messageElement.innerHTML = `
                <img 
                    src="${message.sender_avatar}" 
                    class="avatar" 
                    data-user-id="${message.sender_id}"
                    alt="${message.sender_name || 'User'}" 
                    onerror="this.src='/uploads/images/pngwing.com.png'" 
                />
                <div class="content">
                    <strong>${message.sender_name || 'غير معروف'}</strong>
                    <p>${message.content}</p>
                    ${message.image_path ? `<img class="message-image" src="${message.image_path}" alt="Message Image" onerror="this.style.display='none'" />` : ""}
                </div>
                <button class="delete-message-btn" data-message-id="${message.id}">
                    <i class="fas fa-trash"></i>
                </button>
            `;
            messagesContainer.appendChild(messageElement);
            messagesContainer.scrollTop = messagesContainer.scrollHeight;
        });

        socket.on("avatarUpdated", ({ userId: updatedUserId, avatar }) => {
            document.querySelectorAll(".avatar").forEach(img => {
                if (img.dataset.userId === updatedUserId) {
                    img.src = avatar;
                }
            });
        });

        messagesContainer.addEventListener("click", async (e) => {
            if (e.target.classList.contains("fa-trash")) {
                const button = e.target.closest(".delete-message-btn");
                const messageId = button.dataset.messageId;
                try {
                    await fetch(`/chat/delete/${messageId}`, {
                        method: "POST",
                        credentials: "include",
                    });
                    button.parentElement.remove();
                } catch (error) {
                    alert("خطأ في حذف الرسالة: " + error.message);
                }
            }
        });
    </script>
</body>
<%- include('partials/footer') %>
</html>
