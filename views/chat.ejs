<!DOCTYPE html>
<html lang="ar">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>دردشة Colorizer</title>
    <link href="https://fonts.googleapis.com/css2?family=Cairo:wght@400;700&family=Tajawal:wght@700&display=swap" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: "Cairo", sans-serif;
        }

        body {
            background-color: #f0f2f5;
            color: #333;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            font-size: 0.875rem;
        }

        #chat-container {
            direction: rtl;
            width: 100%;
            max-width: 700px;
            height: 80vh;
            background: #fff;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            display: flex;
            flex-direction: column;
            overflow: hidden;
        }

        .chat-header {
            background: #075e54;
            color: #fff;
            padding: 10px 15px;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .chat-header .user-info {
            display: flex;
            align-items: center;
        }

        .chat-header img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-left: 10px;
        }

        .chat-header h3 {
            font-size: 1.1rem;
            margin: 0;
        }

        .chat-header .status {
            font-size: 0.8rem;
            opacity: 0.8;
        }

        #messages {
            flex: 1;
            padding: 15px;
            overflow-y: auto;
            background: #ece5dd;
        }

        .message {
            margin-bottom: 10px;
            display: flex;
            align-items: flex-end;
        }

        .message.sent {
            flex-direction: row-reverse;
        }

        .message img.avatar {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            margin: 0 10px;
        }

        .message .content {
            max-width: 70%;
        }

        .message p {
            padding: 10px 15px;
            border-radius: 10px;
            margin: 0;
            font-size: 0.95rem;
        }

        .message.received p {
            background: #fff;
            color: #333;
        }

        .message.sent p {
            background: #dcf8c6;
            color: #333;
        }

        .message img.message-image {
            max-width: 200px;
            border-radius: 10px;
            margin-top: 5px;
        }

        .delete-message-btn {
            background: none;
            border: none;
            color: #e74c3c;
            cursor: pointer;
            font-size: 0.9rem;
            margin-right: 5px;
        }

        #message-form {
            padding: 10px;
            background: #f0f0f0;
            display: flex;
            align-items: center;
            border-top: 1px solid #ddd;
        }

        #message-form textarea {
            flex: 1;
            padding: 8px;
            border: none;
            border-radius: 20px;
            margin-left: 10px;
            resize: none;
            outline: none;
        }

        #message-form button {
            background: #075e54;
            color: #fff;
            border: none;
            padding: 8px 15px;
            border-radius: 20px;
            cursor: pointer;
        }

        #message-form .upload-button {
            background: #075e54;
            padding: 8px;
            border-radius: 50%;
            margin-left: 10px;
            cursor: pointer;
        }
    </style>
</head>
<%- include('partials/headerhome') %>
<%- include('partials/headeraction') %>
<body>
    <div id="chat-container">
        <div class="chat-header">
            <div class="user-info">
                <% if (friendAvatar) { %>
                    <img 
                        src="<%= friendAvatar %>" 
                        alt="<%= friendName || 'صديق' %>"
                        onerror="this.src='/uploads/images/pngwing.com.png'" 
                    />
                    <div>
                        <h3><%= friendName || 'صديق' %></h3>
                        <span class="status">
                            <%= friendLastActive && (Date.now() - new Date(friendLastActive).getTime() < 5 * 60 * 1000) ? 'متصل الآن' : 'غير متصل' %>
                        </span>
                    </div>
                <% } else { %>
                    <img src="/uploads/images/pngwing.com.png" alt="صديق" />
                    <div>
                        <h3>صديق</h3>
                        <span class="status">غير متصل</span>
                    </div>
                <% } %>
            </div>
            <i class="fas fa-ellipsis-h" style="font-size: 18px; cursor: pointer;"></i>
        </div>

        <div id="messages">
            <!-- الرسائل ستُضاف ديناميكياً عبر JavaScript -->
        </div>

        <form id="message-form" enctype="multipart/form-data" style="display: flex; flex-direction: row-reverse;">
            <textarea name="messageContent" placeholder="اكتب رسالتك..." rows="1" required></textarea>
            <input type="hidden" name="receiverId" value="<%= friendId %>" />
            <label class="upload-button">
                <i class="fas fa-image"></i>
                <input type="file" name="imagePath" style="display: none" />
            </label>
            <button type="submit"><i class="fas fa-paper-plane"></i></button>
        </form>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();
        const form = document.getElementById("message-form");
        const messagesContainer = document.getElementById("messages");
        const userId = "<%= userId %>";
        const friendId = "<%= friendId %>";

        // دالة لإضافة رسالة إلى الواجهة
        function addMessage(message) {
            const isSent = message.sender_id === userId;
            const messageElement = document.createElement("div");
            messageElement.className = `message ${isSent ? 'sent' : 'received'}`;
            messageElement.dataset.senderId = message.sender_id;
            messageElement.innerHTML = `
                <img 
                    src="${message.sender_avatar}" 
                    class="avatar" 
                    data-user-id="${message.sender_id}"
                    alt="${message.sender_name || 'User'}" 
                    onerror="this.src='/uploads/images/pngwing.com.png'" 
                />
                <div class="content">
                    <p>${message.content}</p>
                    ${message.image_path ? `<img class="message-image" src="${message.image_path}" alt="Message Image" onerror="this.style.display='none'" />` : ""}
                </div>
                <button class="delete-message-btn" data-message-id="${message.id}">
                    <i class="fas fa-trash"></i>
                </button>
            `;
            messagesContainer.appendChild(messageElement);
            messagesContainer.scrollTop = messagesContainer.scrollHeight;
        }

        // جلب الرسائل الأولية عند تحميل الصفحة
        async function loadMessages() {
            try {
                const response = await fetch(`/chat/messages/${friendId}`, {
                    method: "GET",
                    credentials: "include",
                });
                const data = await response.json();
                if (data.messages) {
                    messagesContainer.innerHTML = ""; // مسح الرسائل القديمة
                    data.messages.forEach(addMessage);
                }
            } catch (error) {
                console.error("خطأ في جلب الرسائل:", error);
            }
        }

        // تحميل الرسائل عند فتح الصفحة
        window.addEventListener("load", loadMessages);

        // جلب الرسائل كل 100 ميلي ثانية (كل 0.1 ثانية)
        setInterval(loadMessages, 100);

        // إرسال الرسائل
        form.addEventListener("submit", async (e) => {
            e.preventDefault();
            const messageContent = form.messageContent.value;
            const receiverId = form.receiverId.value;
            const imagePath = form.querySelector("input[type='file']").files[0];

            if (!messageContent.trim() && !imagePath) return;

            const formData = new FormData();
            formData.append("messageContent", messageContent);
            formData.append("receiverId", receiverId);
            if (imagePath) formData.append("imagePath", imagePath);

            try {
                const response = await fetch("/chat/sendMessage", {
                    method: "POST",
                    body: formData,
                });
                const data = await response.json();
                if (data.message) {
                    form.messageContent.value = "";
                    form.querySelector("input[type='file']").value = "";
                }
            } catch (error) {
                alert("خطأ في إرسال الرسالة: " + error.message);
            }
        });

        // استقبال الرسائل الجديدة عبر Socket.IO
        socket.on("newMessage", (message) => {
            addMessage(message);
        });

        // تحديث الصورة الرمزية
        socket.on("avatarUpdated", ({ userId: updatedUserId, avatar }) => {
            document.querySelectorAll(".avatar").forEach((img) => {
                if (img.dataset.userId === updatedUserId) {
                    img.src = avatar;
                }
            });
        });

        // حذف الرسائل
        messagesContainer.addEventListener("click", async (e) => {
            if (e.target.classList.contains("fa-trash")) {
                const button = e.target.closest(".delete-message-btn");
                const messageId = button.dataset.messageId;
                try {
                    await fetch(`/chat/delete/${messageId}`, {
                        method: "POST",
                        credentials: "include",
                    });
                    button.parentElement.remove();
                } catch (error) {
                    alert("خطأ في حذف الرسالة: " + error.message);
                }
            }
        });
    </script>
</body>
<%- include('partials/footer') %>
</html>
